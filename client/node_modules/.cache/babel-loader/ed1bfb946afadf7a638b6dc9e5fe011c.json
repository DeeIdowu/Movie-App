{"ast":null,"code":"var _jsxFileName = \"/Users/deeidowu/Desktop/2020-Coding-Content/Movie-App-Clone/movie-app/client/src/components/views/RegisterPage/RegisterPage.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Input, Button } from \"antd\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      lastName: \"\",\n      name: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required(\"Name is required\"),\n      lastName: Yup.string().required(\"Last Name is required\"),\n      email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n      password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n      confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password,\n          name: values.name,\n          lastname: values.lastname,\n          image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n        };\n        dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            props.history.push(\"/login\");\n          } else {\n            alert(response.payload.err.errmsg);\n          }\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n    } = props;\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Sign up\"), React.createElement(Form, Object.assign({\n      style: {\n        minWidth: \"375px\"\n      }\n    }, formItemLayout, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      required: true,\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"name\",\n      placeholder: \"Enter your name\",\n      type: \"text\",\n      value: values.name,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.name && touched.name ? \"text-input error\" : \"text-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), errors.name && touched.name && React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, errors.name)), React.createElement(Form.Item, {\n      required: true,\n      label: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"lastName\",\n      placeholder: \"Enter your Last Name\",\n      type: \"text\",\n      value: values.lastName,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.lastName && touched.lastName ? \"text-input error\" : \"text-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), errors.lastName && touched.lastName && React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, errors.lastName)), React.createElement(Form.Item, {\n      required: true,\n      label: \"Email\",\n      hasFeedback: true,\n      validateStatus: errors.email && touched.email ? \"error\" : \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"email\",\n      placeholder: \"Enter your Email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email ? \"text-input error\" : \"text-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), errors.email && touched.email && React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, errors.email)), React.createElement(Form.Item, {\n      required: true,\n      label: \"Password\",\n      hasFeedback: true,\n      validateStatus: errors.password && touched.password ? \"error\" : \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"password\",\n      placeholder: \"Enter your password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password ? \"text-input error\" : \"text-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), errors.password && touched.password && React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, errors.password)), React.createElement(Form.Item, {\n      required: true,\n      label: \"Confirm\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"confirmPassword\",\n      placeholder: \"Enter your confirmPassword\",\n      type: \"password\",\n      value: values.confirmPassword,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.confirmPassword && touched.confirmPassword ? \"text-input error\" : \"text-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), errors.confirmPassword && touched.confirmPassword && React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, errors.confirmPassword)), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: handleSubmit,\n      type: \"primary\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Submit\"))));\n  });\n}\n\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/deeidowu/Desktop/2020-Coding-Content/Movie-App-Clone/movie-app/client/src/components/views/RegisterPage/RegisterPage.js"],"names":["React","moment","Formik","Yup","registerUser","useDispatch","Form","Input","Button","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","props","dispatch","email","lastName","name","password","confirmPassword","object","shape","string","required","min","oneOf","ref","values","setSubmitting","setTimeout","dataToSubmit","lastname","image","unix","then","response","payload","success","history","push","alert","err","errmsg","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","minWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Input, Button } from \"antd\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        lastName: \"\",\n        name: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().required(\"Name is required\"),\n        lastName: Yup.string().required(\"Last Name is required\"),\n        email: Yup.string()\n          .email(\"Email is invalid\")\n          .required(\"Email is required\"),\n        password: Yup.string()\n          .min(6, \"Password must be at least 6 characters\")\n          .required(\"Password is required\"),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n          .required(\"Confirm Password is required\")\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg);\n            }\n          });\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form\n              style={{ minWidth: \"375px\" }}\n              {...formItemLayout}\n              onSubmit={handleSubmit}\n            >\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Email\"\n                hasFeedback\n                validateStatus={\n                  errors.email && touched.email ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Password\"\n                hasFeedback\n                validateStatus={\n                  errors.password && touched.password ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button\n                  onClick={handleSubmit}\n                  type=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}