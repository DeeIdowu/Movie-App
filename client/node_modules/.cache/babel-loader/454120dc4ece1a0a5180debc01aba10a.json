{"ast":null,"code":"var _jsxFileName = \"/Users/deethegreat/Desktop/2020-Coding-Content/Movie-App-Clone/movie-app/client/src/components/views/LandingPage/LandingPage.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Typography, Row, Button } from \"antd\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL, IMAGE_SIZE, POSTER_SIZE } from \"../../Config\";\nimport MainImage from \"./Sections/MainImage\";\nimport GridCard from \"../../commons/GridCards\";\nconst {\n  Title\n} = Typography;\n\nfunction LandingPage() {\n  const buttonRef = useRef(null);\n  const [Movies, setMovies] = useState([]);\n  const [MainMovieImage, setMainMovieImage] = useState(null);\n  const [Loading, setLoading] = useState(true);\n  const [CurrentPage, setCurrentPage] = useState(0);\n  useEffect(() => {\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    fetchMovies(endpoint);\n  }, []);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const fetchMovies = endpoint => {\n    fetch(endpoint).then(result => result.json()).then(result => {\n      // console.log(result)\n      // console.log('Movies',...Movies)\n      // console.log('result',...result.results)\n      setMovies([...Movies, ...result.results]);\n      setMainMovieImage(MainMovieImage || result.results[0]);\n      setCurrentPage(result.page);\n    }, setLoading(false)).catch(error => console.error(\"Error:\", error));\n  };\n\n  const loadMoreItems = () => {\n    let endpoint = \"\";\n    setLoading(true);\n    console.log(\"CurrentPage\", CurrentPage);\n    endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${CurrentPage + 1}`;\n    fetchMovies(endpoint);\n  };\n\n  const handleScroll = () => {\n    const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n    const windowBottom = windowHeight + window.pageYOffset;\n\n    if (windowBottom >= docHeight - 1) {\n      // loadMoreItems()\n      console.log(\"clicked\");\n      buttonRef.current.click();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      margin: \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, MainMovieImage && React.createElement(MainImage, {\n    image: `${IMAGE_BASE_URL}${IMAGE_SIZE}${MainMovieImage.backdrop_path}`,\n    title: MainMovieImage.original_title,\n    text: MainMovieImage.overview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: \"85%\",\n      margin: \"1rem auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Title, {\n    level: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" Movies by latest \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Row, {\n    gutter: [16, 16],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, Movies && Movies.map((movie, index) => React.createElement(React.Fragment, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(GridCard, {\n    image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : null,\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })))), Loading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Loading...\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    ref: buttonRef,\n    className: \"loadMore\",\n    onClick: loadMoreItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Load More\"))));\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["/Users/deethegreat/Desktop/2020-Coding-Content/Movie-App-Clone/movie-app/client/src/components/views/LandingPage/LandingPage.js"],"names":["React","useEffect","useState","useRef","Typography","Row","Button","API_URL","API_KEY","IMAGE_BASE_URL","IMAGE_SIZE","POSTER_SIZE","MainImage","GridCard","Title","LandingPage","buttonRef","Movies","setMovies","MainMovieImage","setMainMovieImage","Loading","setLoading","CurrentPage","setCurrentPage","endpoint","fetchMovies","window","addEventListener","handleScroll","fetch","then","result","json","results","page","catch","error","console","loadMoreItems","log","windowHeight","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","windowBottom","pageYOffset","current","click","width","margin","backdrop_path","original_title","overview","map","movie","index","poster_path","id","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Typography, Row, Button } from \"antd\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  IMAGE_SIZE,\n  POSTER_SIZE\n} from \"../../Config\";\nimport MainImage from \"./Sections/MainImage\";\nimport GridCard from \"../../commons/GridCards\";\nconst { Title } = Typography;\nfunction LandingPage() {\n  const buttonRef = useRef(null);\n\n  const [Movies, setMovies] = useState([]);\n  const [MainMovieImage, setMainMovieImage] = useState(null);\n  const [Loading, setLoading] = useState(true);\n  const [CurrentPage, setCurrentPage] = useState(0);\n\n  useEffect(() => {\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    fetchMovies(endpoint);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const fetchMovies = endpoint => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        // console.log(result)\n        // console.log('Movies',...Movies)\n        // console.log('result',...result.results)\n        setMovies([...Movies, ...result.results]);\n        setMainMovieImage(MainMovieImage || result.results[0]);\n        setCurrentPage(result.page);\n      }, setLoading(false))\n      .catch(error => console.error(\"Error:\", error));\n  };\n\n  const loadMoreItems = () => {\n    let endpoint = \"\";\n    setLoading(true);\n    console.log(\"CurrentPage\", CurrentPage);\n    endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${CurrentPage +\n      1}`;\n    fetchMovies(endpoint);\n  };\n\n  const handleScroll = () => {\n    const windowHeight =\n      \"innerHeight\" in window\n        ? window.innerHeight\n        : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n    const windowBottom = windowHeight + window.pageYOffset;\n    if (windowBottom >= docHeight - 1) {\n      // loadMoreItems()\n      console.log(\"clicked\");\n      buttonRef.current.click();\n    }\n  };\n\n  return (\n    <div style={{ width: \"100%\", margin: \"0\" }}>\n      {MainMovieImage && (\n        <MainImage\n          image={`${IMAGE_BASE_URL}${IMAGE_SIZE}${MainMovieImage.backdrop_path}`}\n          title={MainMovieImage.original_title}\n          text={MainMovieImage.overview}\n        />\n      )}\n\n      <div style={{ width: \"85%\", margin: \"1rem auto\" }}>\n        <Title level={2}> Movies by latest </Title>\n        <hr />\n        <Row gutter={[16, 16]}>\n          {Movies &&\n            Movies.map((movie, index) => (\n              <React.Fragment key={index}>\n                <GridCard\n                  image={\n                    movie.poster_path\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                      : null\n                  }\n                  movieId={movie.id}\n                  movieName={movie.original_title}\n                />\n              </React.Fragment>\n            ))}\n        </Row>\n\n        {Loading && <div>Loading...</div>}\n\n        <br />\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <button ref={buttonRef} className=\"loadMore\" onClick={loadMoreItems}>\n            Load More\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n"]},"metadata":{},"sourceType":"module"}