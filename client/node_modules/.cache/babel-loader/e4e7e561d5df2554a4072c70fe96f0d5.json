{"ast":null,"code":"var _jsxFileName = \"/Users/deeidowu/Desktop/2020-Coding-Content/Movie-App-Clone/movie-app/client/src/components/views/FavouritePage/FavouritePage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, Popover, Button } from \"antd\";\nimport axios from \"axios\";\nimport \"./favorite.css\";\nimport { useSelector } from \"react-redux\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../Config\";\nconst {\n  Title\n} = Typography;\n\nfunction FavouritePage() {\n  const user = useSelector(state => state.user);\n  const [Favourites, setFavourites] = useState([]);\n  const [Loading, setLoading] = useState(true);\n  let variable = {\n    userFrom: localStorage.getItem(\"userId\")\n  };\n  useEffect(() => {\n    fetchFavoredMovie();\n  }, []);\n\n  const fetchFavoredMovie = () => {\n    axios.post(\"/api/favourite/getFavouredMovie\", variable).then(response => {\n      if (response.data.success) {\n        console.log(response.data.favourites);\n        setFavorites(response.data.favourites);\n        setLoading(false);\n      } else {\n        alert(\"Failed to get subscription videos\");\n      }\n    });\n  };\n\n  const onClickDelete = (movieId, userFrom) => {\n    const variables = {\n      movieId: movieId,\n      userFrom: userFrom\n    };\n    axios.post(\"/api/favorite/removeFromFavourite\", variables).then(response => {\n      if (response.data.success) {\n        fetchFavouredMovie();\n      } else {\n        alert(\"Failed to Remove From Favorite\");\n      }\n    });\n  };\n\n  const renderCards = Favourites.map((favourite, index) => {\n    const content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, favourite.moviePost ? React.createElement(\"img\", {\n      src: `${IMAGE_BASE_URL}${POSTER_SIZE}${favourite.moviePost}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : \"no image\");\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Popover, {\n      content: content,\n      title: `${favourite.movieTitle}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, favourite.movieTitle)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, favourite.movieRunTime, \" mins\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => onClickDelete(favourite.movieId, favourite.userFrom),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" \", \"Remove\", \" \")));\n  });\n  return React.createElement(\"div\", {\n    style: {\n      width: \"85%\",\n      margin: \"3rem auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Title, {\n    level: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \" Favourite Movies By Me \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), user.userData && !user.userData.isAuth ? React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      fontSize: \"2rem\",\n      height: \"500px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Please Log in first...\"), React.createElement(\"a\", {\n    href: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Go to Login page\")) : !Loading && React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Movie Title\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Movie RunTime\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Remove from favourites\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, renderCards)));\n}\n\nexport default FavouritePage;","map":{"version":3,"sources":["/Users/deeidowu/Desktop/2020-Coding-Content/Movie-App-Clone/movie-app/client/src/components/views/FavouritePage/FavouritePage.js"],"names":["React","useEffect","useState","Typography","Popover","Button","axios","useSelector","IMAGE_BASE_URL","POSTER_SIZE","Title","FavouritePage","user","state","Favourites","setFavourites","Loading","setLoading","variable","userFrom","localStorage","getItem","fetchFavoredMovie","post","then","response","data","success","console","log","favourites","setFavorites","alert","onClickDelete","movieId","variables","fetchFavouredMovie","renderCards","map","favourite","index","content","moviePost","movieTitle","movieRunTime","width","margin","userData","isAuth","fontSize","height","display","flexDirection","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Typography, Popover, Button } from \"antd\";\nimport axios from \"axios\";\nimport \"./favorite.css\";\nimport { useSelector } from \"react-redux\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../Config\";\n\nconst { Title } = Typography;\n\nfunction FavouritePage() {\n  const user = useSelector(state => state.user);\n\n  const [Favourites, setFavourites] = useState([]);\n  const [Loading, setLoading] = useState(true);\n  let variable = { userFrom: localStorage.getItem(\"userId\") };\n\n  useEffect(() => {\n    fetchFavoredMovie();\n  }, []);\n\n  const fetchFavoredMovie = () => {\n    axios.post(\"/api/favourite/getFavouredMovie\", variable).then(response => {\n      if (response.data.success) {\n        console.log(response.data.favourites);\n        setFavorites(response.data.favourites);\n        setLoading(false);\n      } else {\n        alert(\"Failed to get subscription videos\");\n      }\n    });\n  };\n\n  const onClickDelete = (movieId, userFrom) => {\n    const variables = {\n      movieId: movieId,\n      userFrom: userFrom\n    };\n\n    axios\n      .post(\"/api/favorite/removeFromFavourite\", variables)\n      .then(response => {\n        if (response.data.success) {\n          fetchFavouredMovie();\n        } else {\n          alert(\"Failed to Remove From Favorite\");\n        }\n      });\n  };\n\n  const renderCards = Favourites.map((favourite, index) => {\n    const content = (\n      <div>\n        {favourite.moviePost ? (\n          <img src={`${IMAGE_BASE_URL}${POSTER_SIZE}${favourite.moviePost}`} />\n        ) : (\n          \"no image\"\n        )}\n      </div>\n    );\n\n    return (\n      <tr key={index}>\n        <Popover content={content} title={`${favourite.movieTitle}`}>\n          <td>{favourite.movieTitle}</td>\n        </Popover>\n\n        <td>{favourite.movieRunTime} mins</td>\n        <td>\n          <button\n            onClick={() => onClickDelete(favourite.movieId, favourite.userFrom)}\n          >\n            {\" \"}\n            Remove{\" \"}\n          </button>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <div style={{ width: \"85%\", margin: \"3rem auto\" }}>\n      <Title level={2}> Favourite Movies By Me </Title>\n      <hr />\n      {user.userData && !user.userData.isAuth ? (\n        <div\n          style={{\n            width: \"100%\",\n            fontSize: \"2rem\",\n            height: \"500px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          <p>Please Log in first...</p>\n          <a href=\"/login\">Go to Login page</a>\n        </div>\n      ) : (\n        !Loading && (\n          <table>\n            <thead>\n              <tr>\n                <th>Movie Title</th>\n                <th>Movie RunTime</th>\n                <td>Remove from favourites</td>\n              </tr>\n            </thead>\n            <tbody>{renderCards}</tbody>\n          </table>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default FavouritePage;\n"]},"metadata":{},"sourceType":"module"}