{"ast":null,"code":"var _jsxFileName = \"/Users/deeidowu/Desktop/2020-Coding-Content/Movie-App-Clone/movie-app/client/src/components/views/MovieDetail/Sections/Comments.js\";\nimport React, { useState } from \"react\";\nimport { Button, Input, Typography } from \"antd\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport SingleComment from \"./SingleComment\";\nimport ReplyComment from \"./ReplyComment\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Title\n} = Typography;\n\nfunction Comments(props) {\n  const user = useSelector(state => state.user);\n  const [Comment, setComment] = useState(\"\");\n\n  const handleChange = e => {\n    setComment(e.currentTarget.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (user.userData && !user.userData.isAuth) {\n      return alert(\"Please Log in first\");\n    }\n\n    const variables = {\n      content: Comment,\n      writer: user.userData._id,\n      postId: props.postId\n    };\n    console.log(variables);\n    axios.post(\"/api/comment/saveComment\", variables).then(response => {\n      if (response.data.success) {\n        setComment(\"\");\n        props.refreshFunction(response.data.result);\n      } else {\n        alert(\"Failed to save Comment\");\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Title, {\n    level: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" Share your opinions about \", props.movieTitle, \" \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), console.log(props.CommentLists), props.CommentLists && props.CommentLists.map((comment, index) => !comment.responseTo && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(SingleComment, {\n    comment: comment,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(ReplyComment, {\n    CommentLists: props.CommentLists,\n    postId: props.postId,\n    parentCommentId: comment._id,\n    refreshFunction: props.refreshFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), props.CommentLists && props.CommentLists.length === 0 && React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"200px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Be the first one who shares your thought about this movie\"), React.createElement(\"form\", {\n    style: {\n      display: \"flex\"\n    },\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    style: {\n      width: \"100%\",\n      borderRadius: \"5px\"\n    },\n    onChange: handleChange,\n    value: Comment,\n    placeholder: \"write some comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Button, {\n    style: {\n      width: \"20%\",\n      height: \"52px\"\n    },\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/deeidowu/Desktop/2020-Coding-Content/Movie-App-Clone/movie-app/client/src/components/views/MovieDetail/Sections/Comments.js"],"names":["React","useState","Button","Input","Typography","axios","useSelector","SingleComment","ReplyComment","TextArea","Title","Comments","props","user","state","Comment","setComment","handleChange","e","currentTarget","value","onSubmit","preventDefault","userData","isAuth","alert","variables","content","writer","_id","postId","console","log","post","then","response","data","success","refreshFunction","result","movieTitle","CommentLists","map","comment","index","responseTo","length","display","justifyContent","alignItems","height","width","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Input, Typography } from \"antd\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport SingleComment from \"./SingleComment\";\nimport ReplyComment from \"./ReplyComment\";\nconst { TextArea } = Input;\nconst { Title } = Typography;\nfunction Comments(props) {\n  const user = useSelector(state => state.user);\n  const [Comment, setComment] = useState(\"\");\n\n  const handleChange = e => {\n    setComment(e.currentTarget.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (user.userData && !user.userData.isAuth) {\n      return alert(\"Please Log in first\");\n    }\n\n    const variables = {\n      content: Comment,\n      writer: user.userData._id,\n      postId: props.postId\n    };\n    console.log(variables);\n\n    axios.post(\"/api/comment/saveComment\", variables).then(response => {\n      if (response.data.success) {\n        setComment(\"\");\n        props.refreshFunction(response.data.result);\n      } else {\n        alert(\"Failed to save Comment\");\n      }\n    });\n  };\n\n  return (\n    <div>\n      <br />\n      <Title level={3}> Share your opinions about {props.movieTitle} </Title>\n      <hr />\n      {/* Comment Lists  */}\n      {console.log(props.CommentLists)}\n\n      {props.CommentLists &&\n        props.CommentLists.map(\n          (comment, index) =>\n            !comment.responseTo && (\n              <React.Fragment>\n                <SingleComment\n                  comment={comment}\n                  postId={props.postId}\n                  refreshFunction={props.refreshFunction}\n                />\n                <ReplyComment\n                  CommentLists={props.CommentLists}\n                  postId={props.postId}\n                  parentCommentId={comment._id}\n                  refreshFunction={props.refreshFunction}\n                />\n              </React.Fragment>\n            )\n        )}\n\n      {props.CommentLists && props.CommentLists.length === 0 && (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"200px\"\n          }}\n        >\n          Be the first one who shares your thought about this movie\n        </div>\n      )}\n\n      {/* Root Comment Form */}\n      <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\n        <TextArea\n          style={{ width: \"100%\", borderRadius: \"5px\" }}\n          onChange={handleChange}\n          value={Comment}\n          placeholder=\"write some comments\"\n        />\n        <br />\n        <Button style={{ width: \"20%\", height: \"52px\" }} onClick={onSubmit}>\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}