{"ast":null,"code":"var _jsxFileName = \"/Users/deeidowu/Desktop/2020-Coding-Content/Movie-App-Clone/movie-app/client/src/hoc/auth.js\";\nimport React, { useEffect } from \"react\";\nimport { auth } from \"../actions/user_actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nexport default function (ComposedClass, reload, adminRoute = null) {\n  function AuthenticationCheck(props) {\n    let user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(auth()).then(async response => {\n        if (await !response.payload.isAuth) {\n          if (reload) {\n            props.history.push(\"/register_login\");\n          }\n        } else {\n          if (adminRoute && !response.payload.isAdmin) {\n            props.history.push(\"/\");\n          } else {\n            if (reload === false) {\n              props.history.push(\"/\");\n            }\n          }\n        }\n      });\n    }, [dispatch, props.history, user.googleAuth]);\n    return React.createElement(ComposedClass, Object.assign({}, props, {\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n  return AuthenticationCheck;\n}","map":{"version":3,"sources":["/Users/deeidowu/Desktop/2020-Coding-Content/Movie-App-Clone/movie-app/client/src/hoc/auth.js"],"names":["React","useEffect","auth","useSelector","useDispatch","ComposedClass","reload","adminRoute","AuthenticationCheck","props","user","state","dispatch","then","response","payload","isAuth","history","push","isAdmin","googleAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,eAAe,UAASC,aAAT,EAAwBC,MAAxB,EAAgCC,UAAU,GAAG,IAA7C,EAAmD;AAChE,WAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC,QAAIC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAtB;AACA,UAAME,QAAQ,GAAGR,WAAW,EAA5B;AAEAH,IAAAA,SAAS,CAAC,MAAM;AACdW,MAAAA,QAAQ,CAACV,IAAI,EAAL,CAAR,CAAiBW,IAAjB,CAAsB,MAAMC,QAAN,IAAkB;AACtC,YAAI,MAAM,CAACA,QAAQ,CAACC,OAAT,CAAiBC,MAA5B,EAAoC;AAClC,cAAIV,MAAJ,EAAY;AACVG,YAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,iBAAnB;AACD;AACF,SAJD,MAIO;AACL,cAAIX,UAAU,IAAI,CAACO,QAAQ,CAACC,OAAT,CAAiBI,OAApC,EAA6C;AAC3CV,YAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,WAFD,MAEO;AACL,gBAAIZ,MAAM,KAAK,KAAf,EAAsB;AACpBG,cAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD;AACF;AACF;AACF,OAdD;AAeD,KAhBQ,EAgBN,CAACN,QAAD,EAAWH,KAAK,CAACQ,OAAjB,EAA0BP,IAAI,CAACU,UAA/B,CAhBM,CAAT;AAkBA,WAAO,oBAAC,aAAD,oBAAmBX,KAAnB;AAA0B,MAAA,IAAI,EAAEC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AACD,SAAOF,mBAAP;AACD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { auth } from \"../actions/user_actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function(ComposedClass, reload, adminRoute = null) {\n  function AuthenticationCheck(props) {\n    let user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      dispatch(auth()).then(async response => {\n        if (await !response.payload.isAuth) {\n          if (reload) {\n            props.history.push(\"/register_login\");\n          }\n        } else {\n          if (adminRoute && !response.payload.isAdmin) {\n            props.history.push(\"/\");\n          } else {\n            if (reload === false) {\n              props.history.push(\"/\");\n            }\n          }\n        }\n      });\n    }, [dispatch, props.history, user.googleAuth]);\n\n    return <ComposedClass {...props} user={user} />;\n  }\n  return AuthenticationCheck;\n}\n"]},"metadata":{},"sourceType":"module"}